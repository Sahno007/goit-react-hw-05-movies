{"version":3,"file":"static/js/242.e62a05fc.chunk.js","mappings":"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","sources":["components/SearchMovie/SearchMovieStyle.styled.js","components/SearchMovie/SearchMovie.jsx","components/MovieListByName/MovieListStyle.styled.js","components/MovieListByName/MovieListByName.jsx","components/pages/Movies.jsx","components/services/moviedb.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const SearchMovieStyle = styled.form`\n  padding-top: 140px;\n  display: flex;\n  justify-content: center;\n  column-gap: 20px;\n`;","import { useState } from 'react';\nimport { SearchMovieStyle } from './SearchMovieStyle.styled';\nimport { useNavigate } from 'react-router-dom';\n\nconst SearchMovie = () => {\n  const [inputValue, setInputValue] = useState('');\n  const navigate = useNavigate();\n\n  const handlerChange = ({ target: { value } }) => {\n    setInputValue(value);\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim()) {\n      const query = inputValue.trim().toLowerCase();\n      navigate(`/movies?query=${query}`);\n      setInputValue('');\n    } else {\n      alert('Please, write anything');\n    }\n  };\n\n  return (\n    <SearchMovieStyle onSubmit={handlerSubmit}>\n      <input onChange={handlerChange} value={inputValue} />\n      <button type=\"submit\">Search</button>\n    </SearchMovieStyle>\n  );\n};\n\nexport default SearchMovie;","import { styled } from 'styled-components';\n\nexport const MovieListStyle = styled.ul`\n  list-style: none;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { MovieListStyle } from './MovieListStyle.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieListByName = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListStyle>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={`${location.pathname}${location.search}`}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </MovieListStyle>\n  );\n};\n\nexport default MovieListByName;\n\nMovieListByName.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\n// import { Link, useLocation } from 'react-router-dom';\n// import { MovieListStyle } from './MovieListStyle.styled';\n// import PropTypes from 'prop-types';\n\n// const MovieListByName = ({ movies }) => {\n//   return (\n//     <MovieListStyle>\n//       {movies.map(movie => (\n//         <li key={movie.id}>\n//           <Link\n//             to={`/movies/${movie.id}`}\n//             state={{ from: location }}\n//           >\n//             {movie.title}\n//           </Link>\n//         </li>\n//       ))}\n//     </MovieListStyle>\n//   );\n// };\n\n// export default MovieListByName;\n\n// MovieListByName.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       title: PropTypes.string.isRequired,\n//       id: PropTypes.number.isRequired,\n//     })\n//   ).isRequired,\n// };","import SearchMovie from 'components/SearchMovie/SearchMovie';\nimport MovieListByName from 'components/MovieListByName/MovieListByName';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByName } from 'components/services/moviedb';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      fetchMovieByName(query)\n        .then(resp => {\n          if (!resp.ok) {\n            setError('Sorry, something went wrong');\n            throw new Error();\n          }\n          return resp.json();\n        })\n        .then(data => {\n          if (data.results.length === 0) {\n            setError('Sorry, nothing found');\n            throw new Error();\n          }\n\n          setMovieList(\n            data.results.map(film => ({ title: film.title, id: film.id }))\n          );\n        })\n        .catch(err => console.log(err));\n    }\n  }, [query]);\n\n  return (\n    <>\n      <SearchMovie setSearchText={query => setSearchParams({ query })} />\n\n      {error && <h3>{error}</h3>}\n      {!error && movieList.length > 0 && <MovieListByName movies={movieList} />}\n    </>\n  );\n};\n\nexport default Movies;\n\n// import React, { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { fetchMovieByName } from 'components/services/moviedb';\n// import SearchMovie from 'components/SearchMovie/SearchMovie';\n// import MoviesList from 'components/MovieList/MovieList';\n\n// const Movies = () => {\n//   const [movieList, setMovieList] = useState([]);\n//   const [error, setError] = useState('');\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const query = searchParams.get('query');\n\n//   useEffect(() => {\n//     if (query) {\n//       fetchMovieByName(query)\n//         .then(resp => {\n//           if (!resp.ok) {\n//             setError('Sorry, something went wrong');\n//             throw new Error();\n//           }\n//           return resp.json();\n//         })\n//         .then(data => {\n//           if (data.results.length === 0) {\n//             setError('Sorry, nothing found');\n//             throw new Error();\n//           }\n\n//           setMovieList(\n//             data.results.map(film => ({ title: film.title, id: film.id }))\n//           );\n//         })\n//         .catch(err => console.log(err));\n//     }\n//   }, [query]);\n\n//   return (\n//     <>\n//       <SearchMovie setSearchText={query => setSearchParams({ query })} />\n\n//       {error && <h3>{error}</h3>}\n//       {!error && movieList.length > 0 && <MoviesList films={movieList} />}\n//     </>\n//   );\n// };\n\n// export default Movies;","const API_KEY = '7e458b491a16bc45ebacdd0b519bec7c';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieByName = value => {\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${value}`);\n};\n\nexport const fetchMovieById = id => {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchForActors = id => {\n  return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchToReviews = id => {\n  return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n};"],"names":["SearchMovieStyle","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","navigate","useNavigate","_jsxs","onSubmit","e","preventDefault","trim","query","toLowerCase","concat","alert","children","_jsx","onChange","_ref","value","target","type","MovieListStyle","movies","location","useLocation","map","movie","Link","to","id","state","pathname","search","title","movieList","setMovieList","_useState3","_useState4","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","fetchMovieByName","then","resp","ok","Error","json","data","results","length","film","catch","err","console","log","_Fragment","SearchMovie","setSearchText","MovieListByName","API_KEY","BASE_URL","fetchTrendingMovies","fetch","fetchMovieById","fetchForActors","fetchToReviews"],"sourceRoot":""}